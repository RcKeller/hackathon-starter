version: 2.1

orbs:
  # Ensure CIRCLE_COMPARE_URL exists - recommended peer dependency
  compare-url: iynere/compare-url@1.0.0
  # Optimizations to cut down on CI runtime
  runtime-optimizer: rckeller/runtime-optimizer@4.0.0

# === JOBS ===
jobs:
  build:
    docker:
      - image: circleci/node:10
        environment:
          NODE_ENV: production
    steps:
      - checkout
      - compare-url/reconstruct # ensures CIRCLE_COMPARE_URL exists
      - runtime-optimizer/halt-if-unchanged:
          watch: "client"
      - restore_cache:
          keys:
            - v1-repo-build-{{ checksum "client/package-lock.json" }}
            - v1-repo-build-
      - run:
          name: Install Dependencies
          command: cd client && npm ci --no-audit
      - save_cache:
          key: v1-repo-build-{{ checksum "client/package-lock.json" }}
          paths:
            - ~/.npm
      - run: 
          name: Static Build
          command: cd client && CI=false npm run build
  unit:
    docker:
      - image: circleci/node:10
        environment:
          CYPRESS_INSTALL_BINARY: 0 # Skips cypress installation
    steps:
      - checkout
      - compare-url/reconstruct # ensures CIRCLE_COMPARE_URL exists
      - runtime-optimizer/halt-if-unchanged:
          watch: "client"
      - restore_cache:
          keys:
            - v1-repo-unit-{{ checksum "client/package-lock.json" }}
            - v1-repo-unit-
      - run:
          name: Install Dependencies
          command: cd client && npm ci --no-audit
      - save_cache:
          key: v1-repo-build-{{ checksum "client/package-lock.json" }}
          paths:
            - ~/.npm
      - run: 
          name: Test w/ Jest
          command: cd client && npm run test
  e2e:
    docker:
      - image: cypress/base:10
    working_directory: ~/repo
    steps:
      - checkout:
          path: ~/repo
      - restore_cache:
          keys:
            # https://medium.com/@chrisbanes/circleci-cache-key-over-many-files-c9e07f4d471a
            - v1-repo-e2e-{{ checksum "e2e/package-lock.json" }}-{{ checksum "client/package-lock.json" }}-{{ checksum "server/package-lock.json" }}
            - v1-repo-e2e
      # TODO: Refactor server root directory...
      - run:
          name: Install Dependencies
          command: 
            |
              npm --version
              cd ~/repo/e2e && npm ci --no-audit
              cd ~/repo/client && npm ci --no-audit
              cd ~/repo/server && npm ci --no-audit
      - save_cache:
          key: v1-repo-e2e-{{ checksum "e2e/package-lock.json" }}-{{ checksum "client/package-lock.json" }}-{{ checksum "server/package-lock.json" }}
          paths:
            # cache NPM modules and the folder with the Cypress binary
            - ~/.npm
            - ~/.cache
            # cache individual folders
            - ~/repo/e2e/node_modules
            - ~/repo/client/node_modules
            - ~/repo/server/node_modules
      - run:
          name: Static Build
          command: cd client && CI=false npm run build
      - run:
          name: Start Server (fullstack)
          command: cd server && npm run dev
          background: true
      - run:
          name: Cypress Testing
          command: cd e2e && $(npm bin)/cypress run --reporter junit --reporter-options "mochaFile=~/junit-results/my-test-output.xml" --config video=true screenshotsFolder=~/screenshots videosFolder=~/videos
      - store_artifacts:
          path: ~/screenshots
          when: on_fail
      - store_artifacts:
          path: ~/videos
          when: on_fail
      - store_artifacts:
          path: ~/junit-results
      - store_test_results:
          path: ~/junit-results
  deploy:
    docker:
      - image: circleci/node:10
    steps:
      - checkout:
          path: ~/repo
      # here's a basic shell script that deploys to a bare EC2 instance
      # consider using CodeDeploy or ECS at scale, both of which have CCI orbs
      # - run:
      #     name: SCP code to EC2 instance
      #     command: scp -r -o StrictHostKeyChecking=no ~/repo ubuntu@54.184.122.185:/home/repo/
      # - run:
      #     name: Deployment Script
      #     command: ssh -o StrictHostKeyChecking=no ubuntu@54.184.122.185 "~/repo/.circleci/deploy.sh"

          # === WORKFLOWS ===
workflows:
  full_stack:
    jobs:
      - build
      - unit
      - e2e:
          requires:
            - build
            - unit
      - deploy:
          requires:
            - e2e
          filters:
            branches:
              only:
                master
